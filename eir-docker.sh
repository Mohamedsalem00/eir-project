#!/bin/bash

# Script d'utilitaires EIR Docker

show_help() {
    echo "üõ†Ô∏è  Utilitaires Docker pour le projet EIR"
    echo ""
    echo "Usage: $0 [COMMAND]"
    echo ""
    echo "Commandes disponibles:"
    echo "  start      - D√©marrer tous les services"
    echo "  stop       - Arr√™ter tous les services"
    echo "  restart    - Red√©marrer tous les services"
    echo "  rebuild    - Reconstruire et red√©marrer tous les services"
    echo "  logs       - Afficher les logs de tous les services"
    echo "  status     - Afficher l'√©tat des services"
    echo "  clean      - Nettoyer les conteneurs et images"
    echo "  shell-web  - Ouvrir un shell dans le conteneur backend"
    echo "  shell-frontend - Ouvrir un shell dans le conteneur frontend"
    echo "  test       - Tester la connectivit√© des services"
    echo ""
}

case "$1" in
    start)
        echo "üöÄ D√©marrage des services..."
        docker compose up -d
        echo "‚úÖ Services d√©marr√©s!"
        echo "üåê Frontend: http://localhost:3000"
        echo "üîó Backend API: http://localhost:8000"
        ;;
    
    stop)
        echo "üõë Arr√™t des services..."
        docker compose down
        echo "‚úÖ Services arr√™t√©s!"
        ;;
    
    restart)
        echo "üîÑ Red√©marrage des services..."
        docker compose down
        docker compose up -d
        echo "‚úÖ Services red√©marr√©s!"
        ;;
    
    rebuild)
        echo "üèóÔ∏è  Reconstruction des services..."
        docker compose down
        docker compose build --no-cache
        docker compose up -d
        echo "‚úÖ Services reconstruits et d√©marr√©s!"
        ;;
    
    logs)
        if [ -n "$2" ]; then
            docker compose logs -f "$2"
        else
            docker compose logs -f
        fi
        ;;
    
    status)
        echo "üìä √âtat des services:"
        docker compose ps
        echo ""
        echo "üîó URLs disponibles:"
        echo "  Frontend: http://localhost:3000"
        echo "  Backend API: http://localhost:8000"
        echo "  Base de donn√©es: localhost:5432"
        ;;
    
    clean)
        echo "üßπ Nettoyage..."
        docker compose down --remove-orphans
        docker system prune -f
        echo "‚úÖ Nettoyage termin√©!"
        ;;
    
    shell-web)
        echo "üêö Ouverture du shell backend..."
        docker compose exec web bash
        ;;
    
    shell-frontend)
        echo "üêö Ouverture du shell frontend..."
        docker compose exec frontend sh
        ;;
    
    test)
        echo "üß™ Test de connectivit√©..."
        echo "Backend API:"
        curl -s http://localhost:8000/health || echo "‚ùå Backend non accessible"
        echo ""
        echo "Frontend:"
        curl -s http://localhost:3000 > /dev/null && echo "‚úÖ Frontend accessible" || echo "‚ùå Frontend non accessible"
        echo ""
        echo "Base de donn√©es:"
        docker compose exec db pg_isready -U postgres && echo "‚úÖ Base de donn√©es accessible" || echo "‚ùå Base de donn√©es non accessible"
        ;;
    
    *)
        show_help
        ;;
esac
